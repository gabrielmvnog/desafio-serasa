[tool.poetry]
name = "user-api"
version = "0.0.1"
description = "User API"
authors = ["Gabriel Nogueira"]
readme = "README.md"
packages = [{include = "app"}]

[tool.poetry.dependencies]
python = "^3.11"
fastapi = "^0.98.0"
uvicorn = {extras = ["standard"], version = "^0.22.0"}
sqlalchemy = "^2.0.17"
alembic = "^1.11.1"
psycopg2 = "^2.9.6"
pydantic = {extras = ["email"], version = "^1.10.9"}
fastapi-cache2 = {extras = ["redis"], version = "^0.2.1"}
validate-docbr = "^1.10.0"
phonenumbers = "^8.13.15"

[tool.poetry.group.dev.dependencies]
ruff = "^0.0.275"

[tool.poetry.group.test.dependencies]
pytest = "^7.4.0"
httpx = "^0.24.1"
pytest-mock = "^3.11.1"
sqlalchemy-utils = "^0.41.1"
trio = "^0.22.0"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.ruff]
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "C",  # flake8-comprehensions
    "B",  # flake8-bugbear
]
ignore = [
    "E501",  # line too long, handled by black
    "B008",  # do not perform function calls in argument defaults
    "C901",  # too complex
]

[tool.ruff.isort]
known-third-party = ["fastapi", "pydantic", "starlette"]
